system System

instance variables

-- test data object
public static env: Environment := new Environment(<BASIC>);

public static controller: [Controller] := nil;    

private leftSensor: IRSensor;
private rightSensor: IRSensor;

private leftSensorFiltered: FilteredIRSensor;
private rightSensorFiltered: FilteredIRSensor;

private leftServo: Servo;
private rightServo: Servo;

private cpu : CPU := new CPU(<FP>, 1E6);

operations

public System : () ==> System
System () == 
(
	-- create sensor and actuator objects
	leftSensor := new IRSensor(hwi.lfLeftVal, hwi.lfLeftFailFlag);
	rightSensor := new IRSensor(hwi.lfRightVal, hwi.lfRightFailFlag);
	leftFilter := new FilteredIRSensor(leftSensor);
	rightFilter := new FilteredIRSensor(rightSensor);
	leftServo := new Servo(hwi.servoLeftVal, false);
	rightServo := new Servo(hwi.servoRightVal, true);
	
	-- create controller object
	controller := new Controller(leftFilter, rightFilter, leftServo, rightServo);
	
	-- deploy objects
	cpu.deploy(controller,  "Controller");
	cpu.deploy(leftSensor,  "Left sensor");
	cpu.deploy(rightSensor, "Right sensor");
	cpu.deploy(leftFilter,  "Left sensor filtered");
	cpu.deploy(rightFilter, "Right sensor filtered");  
	cpu.deploy(leftServo,   "Left servo");
	cpu.deploy(rightServo,  "Right servo");
);

end System
